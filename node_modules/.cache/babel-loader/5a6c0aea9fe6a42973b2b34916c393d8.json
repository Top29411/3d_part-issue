{"ast":null,"code":"import _slicedToArray from \"/Users/pavlomishchenko/Downloads/fbx-app-react-forked/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectDestructuringEmpty from \"/Users/pavlomishchenko/Downloads/fbx-app-react-forked/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";\n\nvar _jsxFileName = \"/Users/pavlomishchenko/Downloads/fbx-app-react-forked/src/canvas/components/Wolf.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Wolf = function Wolf(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var theModel = useLoader(FBXLoader, \"/wolf/model.fbx\");\n\n  var _useLoader = useLoader(TextureLoader, [\"/wolf/color.png\", \"/wolf/normal.png\", \"/wolf/roughness.png\", \"/wolf/metalic.png\"]),\n      _useLoader2 = _slicedToArray(_useLoader, 4),\n      colorMap = _useLoader2[0],\n      normalMap = _useLoader2[1],\n      roughnessMap = _useLoader2[2],\n      metalnessMap = _useLoader2[3];\n\n  var modelRef = useRef(null); // useEffect(() => {\n  //     if (theModel) {\n  //         console.log(\"1\", theModel);\n  //         console.log(\"11\", theModel?.children[0].geometry);\n  //         console.log(\"2\", modelRef.current);\n  //     }\n  // }, [theModel]);\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    rotation: [0, 0, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: modelRef,\n      geometry: theModel === null || theModel === void 0 ? void 0 : theModel.children[0].geometry,\n      scale: [0.001, 0.001, 0.001],\n      rotation: [Math.PI / 2, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        map: colorMap,\n        normalMap: normalMap,\n        roughnessMap: roughnessMap,\n        metalnessMap: metalnessMap,\n        attachArray: \"material\" // alphaMap={theModel?.children[0].material.alphaMap}\n        ,\n        metalness: 1,\n        roughness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, -1],\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [1, 1, 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#BADA55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Wolf, \"BR5grwnLAqKCMPDnfKyjfqfKFrI=\", false, function () {\n  return [useLoader, useLoader];\n});\n\n_c = Wolf;\nexport default Wolf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wolf\");","map":{"version":3,"names":["React","FBXLoader","TextureLoader","useLoader","useRef","useEffect","Wolf","theModel","colorMap","normalMap","roughnessMap","metalnessMap","modelRef","children","geometry","Math","PI"],"sources":["/Users/pavlomishchenko/Downloads/fbx-app-react-forked/src/canvas/components/Wolf.jsx"],"sourcesContent":["import React from \"react\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport {useLoader} from \"react-three-fiber\";\nimport { useRef, useEffect } from \"react\";\n\nconst Wolf = ({ }) => {\n    const theModel = useLoader(FBXLoader, \"/wolf/model.fbx\");\n    const [colorMap,normalMap,roughnessMap, metalnessMap] = useLoader(TextureLoader, [\n        \"/wolf/color.png\",\n        \"/wolf/normal.png\",\n        \"/wolf/roughness.png\",\n        \"/wolf/metalic.png\",\n    ]);\n    const modelRef = useRef(null);\n\n    // useEffect(() => {\n    //     if (theModel) {\n    //         console.log(\"1\", theModel);\n    //         console.log(\"11\", theModel?.children[0].geometry);\n    //         console.log(\"2\", modelRef.current);\n    //     }\n    // }, [theModel]);\n\n    return (\n        <group rotation={[0,0,0]}>\n            <mesh\n                ref={modelRef}\n                geometry={theModel?.children[0].geometry}\n                scale={[0.001, 0.001, 0.001]}\n                rotation={[Math.PI / 2,0,0]}\n            >\n                <meshPhongMaterial\n                    map={colorMap}\n                    normalMap={normalMap}\n                    roughnessMap={roughnessMap}\n                    metalnessMap={metalnessMap}\n                    attachArray=\"material\"\n                    // alphaMap={theModel?.children[0].material.alphaMap}\n                    metalness={1}\n                    roughness={1}\n                />\n            </mesh>\n            <mesh position={[0, 0, -1]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshStandardMaterial color='#BADA55' />\n            </mesh>\n        </group>\n    );\n};\n\nexport default Wolf;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAS;EAAA;;EAAA;;EAClB,IAAMC,QAAQ,GAAGJ,SAAS,CAACF,SAAD,EAAY,iBAAZ,CAA1B;;EACA,iBAAwDE,SAAS,CAACD,aAAD,EAAgB,CAC7E,iBAD6E,EAE7E,kBAF6E,EAG7E,qBAH6E,EAI7E,mBAJ6E,CAAhB,CAAjE;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAgBC,SAAhB;EAAA,IAA0BC,YAA1B;EAAA,IAAwCC,YAAxC;;EAMA,IAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB,CARkB,CAUlB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAO,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAjB;IAAA,wBACI;MACI,GAAG,EAAEQ,QADT;MAEI,QAAQ,EAAEL,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEM,QAAV,CAAmB,CAAnB,EAAsBC,QAFpC;MAGI,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHX;MAII,QAAQ,EAAE,CAACC,IAAI,CAACC,EAAL,GAAU,CAAX,EAAa,CAAb,EAAe,CAAf,CAJd;MAAA,uBAMI;QACI,GAAG,EAAER,QADT;QAEI,SAAS,EAAEC,SAFf;QAGI,YAAY,EAAEC,YAHlB;QAII,YAAY,EAAEC,YAJlB;QAKI,WAAW,EAAC,UALhB,CAMI;QANJ;QAOI,SAAS,EAAE,CAPf;QAQI,SAAS,EAAE;MARf;QAAA;QAAA;QAAA;MAAA;IANJ;MAAA;MAAA;MAAA;IAAA,SADJ,eAkBI;MAAM,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAAhB;MAAA,wBACI;QAAa,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;MAAnB;QAAA;QAAA;QAAA;MAAA,SADJ,eAEI;QAAsB,KAAK,EAAC;MAA5B;QAAA;QAAA;QAAA;MAAA,SAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,SAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,SADJ;AAyBH,CA3CD;;GAAML,I;UACeH,S,EACuCA,S;;;KAFtDG,I;AA6CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}