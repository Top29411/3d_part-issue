{"ast":null,"code":"import _slicedToArray from \"/Users/pavlomishchenko/Downloads/fbx-app-react-forked/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/pavlomishchenko/Downloads/fbx-app-react-forked/src/canvas/components/Girl.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Girl = function Girl() {\n  _s();\n\n  var materials = useLoader(MTLLoader, \"/girl/girl OBJ.mtl\");\n  var theModel = useLoader(OBJLoader, \"/girl/girl.obj\", function (loader) {\n    console.log(materials);\n    materials.preload();\n    loader.setMaterials(materials);\n  });\n\n  var _useLoader = useLoader(TextureLoader, [\"/wolf/color.png\", \"/wolf/normal.png\", \"/wolf/roughness.png\", \"/wolf/metalic.png\"]),\n      _useLoader2 = _slicedToArray(_useLoader, 4),\n      colorMap = _useLoader2[0],\n      normalMap = _useLoader2[1],\n      roughnessMap = _useLoader2[2],\n      metalnessMap = _useLoader2[3];\n\n  var modelRef = useRef(theModel);\n  useEffect(function () {\n    if (theModel) {\n      console.log(\"1\", theModel);\n      console.log(\"1\", materials); // console.log(\"11\", theModel?.children[0].geometry);\n\n      console.log(\"2\", modelRef.current);\n      modelRef.current.traverse(function (child) {\n        if (child.isMesh) child.geometry.computeVertexNormals();\n      });\n    }\n  }, [theModel]); // const geometry = useMemo(() => {\n  //     const g = [];\n  //     theModel.traverse((c) => {\n  //         if (c.type === \"Mesh\") {\n  //             console.log(c)\n  //             g.push(\n  //                 <mesh\n  //                     geometry={c.geometry}\n  //                     // material={c.material}\n  //                 />\n  //             );\n  //         }\n  //     });\n  //     return g;\n  // },[theModel])\n\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    ref: modelRef,\n    object: theModel,\n    scale: [1, 1, 1],\n    position: [0, -1, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, _this) // <group rotation={[0,0,0]}>\n  //     {/*<mesh*/}\n  //     {/*    ref={modelRef}*/}\n  //     {/*    geometry={geometry}*/}\n  //     {/*    scale={[0.001, 0.001, 0.001]}*/}\n  //     {/*    rotation={[Math.PI / 2,0,0]}*/}\n  //     {/*>*/}\n  //     {/*    <meshStandardMaterial*/}\n  //     {/*        map={colorMap}*/}\n  //     {/*        normalMap={normalMap}*/}\n  //     {/*        roughnessMap={roughnessMap}*/}\n  //     {/*        metalnessMap={metalnessMap}*/}\n  //     {/*        attachArray=\"material\"*/}\n  //     {/*        // alphaMap={theModel?.children[0].material.alphaMap}*/}\n  //     {/*        metalness={1}*/}\n  //     {/*        roughness={1}*/}\n  //     {/*    />*/}\n  //     {/*</mesh>*/}\n  //     {geometry}\n  // </group>\n  ;\n};\n\n_s(Girl, \"vryBlPqKw9fTOLstz7UkWZnOjxI=\", false, function () {\n  return [useLoader, useLoader, useLoader];\n});\n\n_c = Girl;\nexport default Girl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Girl\");","map":{"version":3,"names":["React","useMemo","OBJLoader","MTLLoader","TextureLoader","useLoader","useRef","useEffect","Girl","materials","theModel","loader","console","log","preload","setMaterials","colorMap","normalMap","roughnessMap","metalnessMap","modelRef","current","traverse","child","isMesh","geometry","computeVertexNormals"],"sources":["/Users/pavlomishchenko/Downloads/fbx-app-react-forked/src/canvas/components/Girl.jsx"],"sourcesContent":["import React, {useMemo} from \"react\";\n\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader'\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport {useLoader} from \"react-three-fiber\";\nimport { useRef, useEffect } from \"react\";\n\nconst Girl = () => {\n    const materials = useLoader(MTLLoader, \"/girl/girl OBJ.mtl\")\n    const theModel = useLoader(OBJLoader, \"/girl/girl.obj\", (loader) => {\n        console.log(materials)\n        materials.preload()\n        loader.setMaterials(materials)\n    });\n    const [colorMap,normalMap,roughnessMap, metalnessMap] = useLoader(TextureLoader, [\n        \"/wolf/color.png\",\n        \"/wolf/normal.png\",\n        \"/wolf/roughness.png\",\n        \"/wolf/metalic.png\",\n    ]);\n    const modelRef = useRef(theModel);\n\n    useEffect(() => {\n        if (theModel) {\n            console.log(\"1\", theModel);\n            console.log(\"1\", materials);\n            // console.log(\"11\", theModel?.children[0].geometry);\n            console.log(\"2\", modelRef.current);\n\n            modelRef.current.traverse(function (child) {\n                if (child.isMesh) child.geometry.computeVertexNormals();\n            });\n        }\n    }, [theModel]);\n\n    // const geometry = useMemo(() => {\n    //     const g = [];\n    //     theModel.traverse((c) => {\n    //         if (c.type === \"Mesh\") {\n    //             console.log(c)\n    //             g.push(\n    //                 <mesh\n    //                     geometry={c.geometry}\n    //                     // material={c.material}\n    //                 />\n    //             );\n    //         }\n    //     });\n    //     return g;\n    // },[theModel])\n\n    return (\n        <primitive\n          ref={modelRef}\n          object={theModel}\n          scale={[1, 1, 1]}\n          position={[0, -1, 0]}\n        />\n        // <group rotation={[0,0,0]}>\n        //     {/*<mesh*/}\n        //     {/*    ref={modelRef}*/}\n        //     {/*    geometry={geometry}*/}\n        //     {/*    scale={[0.001, 0.001, 0.001]}*/}\n        //     {/*    rotation={[Math.PI / 2,0,0]}*/}\n        //     {/*>*/}\n        //     {/*    <meshStandardMaterial*/}\n        //     {/*        map={colorMap}*/}\n        //     {/*        normalMap={normalMap}*/}\n        //     {/*        roughnessMap={roughnessMap}*/}\n        //     {/*        metalnessMap={metalnessMap}*/}\n        //     {/*        attachArray=\"material\"*/}\n        //     {/*        // alphaMap={theModel?.children[0].material.alphaMap}*/}\n        //     {/*        metalness={1}*/}\n        //     {/*        roughness={1}*/}\n        //     {/*    />*/}\n        //     {/*</mesh>*/}\n        //     {geometry}\n        // </group>\n    );\n};\n\nexport default Girl;"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AAEA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EAAA;;EACf,IAAMC,SAAS,GAAGJ,SAAS,CAACF,SAAD,EAAY,oBAAZ,CAA3B;EACA,IAAMO,QAAQ,GAAGL,SAAS,CAACH,SAAD,EAAY,gBAAZ,EAA8B,UAACS,MAAD,EAAY;IAChEC,OAAO,CAACC,GAAR,CAAYJ,SAAZ;IACAA,SAAS,CAACK,OAAV;IACAH,MAAM,CAACI,YAAP,CAAoBN,SAApB;EACH,CAJyB,CAA1B;;EAKA,iBAAwDJ,SAAS,CAACD,aAAD,EAAgB,CAC7E,iBAD6E,EAE7E,kBAF6E,EAG7E,qBAH6E,EAI7E,mBAJ6E,CAAhB,CAAjE;EAAA;EAAA,IAAOY,QAAP;EAAA,IAAgBC,SAAhB;EAAA,IAA0BC,YAA1B;EAAA,IAAwCC,YAAxC;;EAMA,IAAMC,QAAQ,GAAGd,MAAM,CAACI,QAAD,CAAvB;EAEAH,SAAS,CAAC,YAAM;IACZ,IAAIG,QAAJ,EAAc;MACVE,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,QAAjB;MACAE,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBJ,SAAjB,EAFU,CAGV;;MACAG,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBO,QAAQ,CAACC,OAA1B;MAEAD,QAAQ,CAACC,OAAT,CAAiBC,QAAjB,CAA0B,UAAUC,KAAV,EAAiB;QACvC,IAAIA,KAAK,CAACC,MAAV,EAAkBD,KAAK,CAACE,QAAN,CAAeC,oBAAf;MACrB,CAFD;IAGH;EACJ,CAXQ,EAWN,CAAChB,QAAD,CAXM,CAAT,CAfe,CA4Bf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IACE,GAAG,EAAEU,QADP;IAEE,MAAM,EAAEV,QAFV;IAGE,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHT;IAIE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR;EAJZ;IAAA;IAAA;IAAA;EAAA,SADJ,CAOI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA1BJ;AA4BH,CAxED;;GAAMF,I;UACgBH,S,EACDA,S,EAKuCA,S;;;KAPtDG,I;AA0EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}